
For generic install information, read INSTALL.txt
For copyright and authors information, read README.txt
This documentation explains: 
How to deploy a multi-server openmediakit transcoder instance

INtRODUCTION
============


If your openmediakit transcoder instance is likely to have *a lot* of videos to transcode, you can deploy it in a multiserver mode.

The multiserver mode works that way:
* you have a mysql server, remote or local, but that can be joined remotely by any server participating in the transcoding process.
* you have a web server which serves a proper openmediakit transcoder instance.  
* you have one or more other servers, called the "secondary servers", which will only run the transcoder daemon (and can run the metadata daemon too)
* your main server is sharing its www root using NFS and a gigabit or multigigabit network with its secondary peers.

NOTE: 
* If your webserver serving the transcoder don't have a lot of CPU power available, you can disable the metadata and/or transcoder daemons there. just remove their init script and launch the metadata/transcoder daemons only on secondary servers.
* If you have a lot of videos to transcode and recognize, you should have a lot of disk I/O available on the web document root of the transcoder. Using SSD's is recommended.
* Since you are using NFS to share the documentroot between servers, you shall have a private IP network between your hosts. The secondary servers DON'T NEED to have Internet access though. 
* You can use as many secondary transcoders as you want, as long as your NFS server have enough disk I/O capabilities to handle the load :) Each secondary server will use as much CPU power as it can using multithreaded ffmpeg.


DEPLOYMENT PROCESS
==================

To deploy a multiserver instance of the OpenMediaKit Transcoder, proceeed as follow:

1. Deploy the OMKT in a standard server. Let's say /var/www/omkt is your document root. and 10.2.1.41 is our server's private ip address.

2. share /var/www/ using NFS.

Under Debian Wheezy, do:
 aptitude install nfs-kernel-server
 echo "/var/www/  10.2.1.0/255.255.255.0(rw,async,no_subtree_check,no_root_squash)" >>/etc/exports
 /etc/init.d/nfs-kernel-server reload

in our case, all secondary omkt instances will be on 10.2.0.X network.

3. deploy a secondary Debian Wheezy machine. Give it a unique hostname (eg: if your main omkt instance is named "omkt", you can name it "omkt2", but NOT "omkt" too.)

4. add the deb-multimedia.org repository, example :

 echo "deb http://debian.octopuce.fr/debian-multimedia wheezy main non-free"  >/etc/apt/sources.list.d/multimedia.list
 apt-get update
 apt-get install deb-multimedia-keyring

5. install the required packages : 

 apt-get install nfs-client php5-cli php5-mysql ffmpeg

6. mount the /var/www of the main omkt into the secondary one : 

 mkdir /var/www
 echo "10.2.1.41:/var/www /var/www  nfs  auto,rsize=8192,wsize=8192,vers=3	0	0" >>/etc/fstab
 mount /var/www

(you may need to allow communication between the hosts in your firewall)

7. ensure that your OMKT MAIN instance has a REMOTE MySQL configuration. 
(no "localhost" or "127.0.0.1" for your mysql server connection. 
If your mysql is LOCAL make it listen into the network (comment the "bind_address" directive in /etc/mysql/my.cnf) 
and allow connections from all the IP addresses of your OMKT-s instances 
( using mysql -B -e "GRANT ALL ON omkt.* TO 'omkt'@'%' IDENTIFIED BY 'randompassword';" )   

8. launch the metadata daemon and transcode daemon in your omkt-2 machine, using the 2 initscripts provided with the OMKT.
something like 

 ln -s /var/www/modules/api/utilities/transcoder.init.sh /etc/init.d/omkt-transcoder
 ln -s /var/www/modules/api/utilities/metadata.init.sh /etc/init.d/omkt-metadata

they will launch something like : 
cd /var/www/modules/api/scripts ; php metadatadaemon.php 
cd /var/www/modules/api/scripts ; php transcoderdaemon.php


